{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/ContactList/Filter.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/Section/Section.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onFormSubmit","onNewContactAdd","reset","this","onSubmit","className","styles","title","button","type","onChange","pattern","required","small","Component","ContactItem","id","onDeleteContact","contactlist__item","button__delete","onClick","ContactList","contacts","onDeleteCont","map","Filter","message","filter","Section","children","section","container","App","handleChangeFilter","formSubmitHandler","data","console","log","addNewContact","newName","newNumber","some","alert","newContact","uuidv4","prevState","getFilteredContacts","normalizedFilter","toLowerCase","includes","deleteContactHandler","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8787f8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactlist__item\":\"ContactList_contactlist__item__1vNCG\",\"title\":\"ContactList_title__2ht78\",\"button\":\"ContactList_button__29QRx\",\"button__delete\":\"ContactList_button__delete__SpBYQ\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  \n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  state = {\n    name:'',\n    number:''\n  };\n\n\n\n  handleChange = event => {\n    const {name, value} = event.currentTarget;\n    this.setState({[name]: value});\n    \n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onFormSubmit(this.state);\n    this.props.onNewContactAdd(this.state.name, this.state.number);\n\n    this.reset();\n\n  }\n\n  reset = () => {\n    this.setState({name:'',\n    number:''});\n  }\n\n  render() {\n    const {name, number} = this.state;\n    return (\n      <div>\n          <form onSubmit={this.handleSubmit}>\n            <label className={styles.title}>Name\n            <input className={styles.button}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            />\n            </label>\n            \n            <label className={styles.title}>Number  \n            <input className={styles.button}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            />\n            </label>\n  \n            <button type=\"submit\" className={styles.button + ' '+ styles.small}>Сохранить</button>\n          </form>       \n         \n      </div>\n    );\n  }\n};\n\nexport default ContactForm;\n","import styles from './ContactList.module.css';\r\n\r\nconst ContactItem = ({id, name, number, onDeleteContact}) => (\r\n    <li className={styles.contactlist__item}>\r\n        <p>{name}, {number}</p>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.button__delete}\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Удалить\r\n        </button>\r\n    </li>  \r\n);\r\n\r\nexport default ContactItem;","import ContactItem from './ContactItem';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactList.module.css';\n\n\nconst ContactList = ({contacts, onDeleteCont}) => (\n  <div>\n     <p className={styles.title}>Contact list</p>\n     <ul>\n       {contacts.map(({name, number, id})=>{\n         return (\n          <ContactItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteCont}\n          />\n         );\n       }  )}\n     </ul>\n  </div>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape(\n      {\n        id: PropTypes.any.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      })\n  ),\n}\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nimport styles from './ContactList.module.css';\n\n\nconst Filter = ({message, filter, onChange}) => \n  (\n    <div>\n        <p className={styles.contactlist__item}>{message}</p>\n        <input className={styles.button}\n              type=\"text\"\n              value={filter}\n              onChange={onChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              />\n    </div>\n  \n  \n  );\n\n\n  Filter.propTypes = {\n    message: PropTypes.string.isRequired,\n    filter: PropTypes.string,\n  }\n  \n\n  \n\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <div className={styles.section + ' ' + styles.container}>\n    {title && <h2> {title}</h2>}\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n}\n\nexport default Section;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/ContactList/Filter';\nimport Section from './components/Section/Section';\n\n\nimport './App.css';\n\nclass App extends Component {\n  \n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape(\n        {\n          id: PropTypes.any.isRequired,\n          name: PropTypes.string.isRequired,\n          number: PropTypes.string.isRequired,\n        })\n    ),\n    filter: PropTypes.string,\n    \n  };\n\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    name: '',\n    number: '',\n    filter: '',\n  };\n\n  handleChangeFilter = event => {\n    const {value} = event.currentTarget;\n    this.setState({filter: value});\n    \n  }\n\n  formSubmitHandler = (data) => {\n    console.log('formSubmitHandler data:', data);\n  }\n\n  addNewContact = (newName, newNumber) => {\n    const isNew = this.state.contacts.some(({name}) => name === newName)\n    if (isNew) { alert(`${newName} is already in contacts.`); return }\n\n    if (newName && newNumber) {\n    const newContact = {id: uuidv4(), name:newName, number:newNumber};\n    this.setState(prevState => ({ contacts: [ newContact, ...prevState.contacts],}));\n    }\n    // console.log('newName, newNumber', newName, newNumber);\n  }\n  \n  getFilteredContacts = () => {\n    const {filter, contacts} = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({name}) => name.toLowerCase().includes(normalizedFilter));\n  }\n\n  deleteContactHandler = (contactId) => {\n    console.log('id called: ', contactId)\n    this.setState(prevState=>({contacts:prevState.contacts.filter(({id})=>id !== contactId)}))\n  }\n  \n  render() {\n  // console.log('uuidv4():',uuidv4()); \n  // console.log('this.state.name:',this.state.name);\n  // console.log('this.state.number:',this.state.number);\n   \n    return (\n      \n      <div className=\"App\">\n        <Section title=\"Phonebook\">\n          <ContactForm\n          onFormSubmit={this.formSubmitHandler}\n          onNewContactAdd ={this.addNewContact}\n          />\n        </Section>\n\n        <Section title=\"Contacts\">\n          \n            <Filter message=\"Find contacts by name\"\n            filter={this.state.filter}\n            onChange={this.handleChangeFilter} />\n          \n\n            <ContactList contacts={this.getFilteredContacts()}\n            onDeleteCont={this.deleteContactHandler}\n            \n            />\n          \n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__ZUJz8\",\"small\":\"ContactForm_small__3TvIT\",\"title\":\"ContactForm_title__1l-9S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__39n7N\",\"container\":\"Section_container__MUms_\"};"],"sourceRoot":""}